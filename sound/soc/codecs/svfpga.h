/*
 * svfpga.h -- SVFPGA ALSA SoC audio driver header
 *
 * Copyright 2015 Intel, Inc.
 *
 * Author: Hardik Shah <hardik.t.shah@intel.com>
 * Dummy ASoC Codec Driver based Cirrus Logic CS42L42 Codec
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 */

#ifndef __SVFPGA_H__
#define __SVFPGA_H__

#include <linux/regulator/consumer.h>

#define SVFPGA_PAGE_REGISTER	0x00	/* Page Select Register */
#define SVFPGA_WIN_START	0x00
#define SVFPGA_WIN_LEN		0x100
#define SVFPGA_RANGE_MIN	0x00
#define SVFPGA_RANGE_MAX	0x7F

#define SVFPGA_PAGE_10		0x9000
#define SVFPGA_PAGE_11		0x9100
#define SVFPGA_PAGE_12		0x9200
#define SVFPGA_PAGE_13		0x9300
#define SVFPGA_PAGE_15		0x9500
#define SVFPGA_PAGE_19		0x9900
#define SVFPGA_PAGE_1B		0x9B00
#define SVFPGA_PAGE_1C		0x9C00
#define SVFPGA_PAGE_1D		0x9D00
#define SVFPGA_PAGE_1F		0x9F00
#define SVFPGA_PAGE_20		0xA000
#define SVFPGA_PAGE_21		0xA100
#define SVFPGA_PAGE_23		0xA300
#define SVFPGA_PAGE_24		0xA400
#define SVFPGA_PAGE_25		0xA500
#define SVFPGA_PAGE_26		0xA600
#define SVFPGA_PAGE_28		0xA800
#define SVFPGA_PAGE_29		0xA900
#define SVFPGA_PAGE_2A		0xAA00
#define SVFPGA_PAGE_30		0xB000

#define SVFPGA_CHIP_ID		0x42A42

/* Page 0x10 Global Registers */
#define SVFPGA_DEVID_AB		(SVFPGA_PAGE_10 + 0x01)
#define SVFPGA_DEVID_CD		(SVFPGA_PAGE_10 + 0x02)
#define SVFPGA_DEVID_E			(SVFPGA_PAGE_10 + 0x03)
#define SVFPGA_FABID			(SVFPGA_PAGE_10 + 0x04)
#define SVFPGA_REVID			(SVFPGA_PAGE_10 + 0x05)
#define SVFPGA_FRZ_CTL			(SVFPGA_PAGE_10 + 0x06)
#define SVFPGA_SRC_CTL			(SVFPGA_PAGE_10 + 0x07)
#define SVFPGA_MCLK_STAT		(SVFPGA_PAGE_10 + 0x08)

#define SVFPGA_MCLK_CTL		(SVFPGA_PAGE_10 + 0x09)
#define SVFPGA_INTERNAL_FS_SHIFT	1
#define SVFPGA_INTERNAL_FS_MASK	(1 << SVFPGA_INTERNAL_FS_SHIFT)

#define SVFPGA_SFTRAMP_RATE		(SVFPGA_PAGE_10 + 0x0A)
#define SVFPGA_I2C_DEBOUNCE		(SVFPGA_PAGE_10 + 0x0E)
#define SVFPGA_I2C_STRETCH		(SVFPGA_PAGE_10 + 0x0F)
#define SVFPGA_I2C_TIMEOUT		(SVFPGA_PAGE_10 + 0x10)

/* Page 0x11 Power and Headset Detect Registers */
#define SVFPGA_PWR_CTL1		(SVFPGA_PAGE_11 + 0x01)
#define SVFPGA_ASP_DAI_PDN_SHIFT	6
#define SVFPGA_ASP_DAI_PDN_MASK	(1 << SVFPGA_ASP_DAI_PDN_SHIFT)
#define SVFPGA_MIXER_PDN_SHIFT		5
#define SVFPGA_MIXER_PDN_MASK		(1 << SVFPGA_MIXER_PDN_SHIFT)
#define SVFPGA_HP_PDN_SHIFT		3
#define SVFPGA_HP_PDN_MASK		(1 << SVFPGA_HP_PDN_SHIFT)
#define SVFPGA_PDN_ALL_SHIFT		0
#define SVFPGA_PDN_ALL_MASK		(1 << SVFPGA_PDN_ALL_SHIFT)

#define SVFPGA_PWR_CTL2		(SVFPGA_PAGE_11 + 0x02)
#define SVFPGA_PWR_CTL3		(SVFPGA_PAGE_11 + 0x03)
#define SVFPGA_RSENSE_CTL1		(SVFPGA_PAGE_11 + 0x04)
#define SVFPGA_RSENSE_CTL2		(SVFPGA_PAGE_11 + 0x05)

#define SVFPGA_OSC_SWITCH		(SVFPGA_PAGE_11 + 0x07)
#define SVFPGA_SCLK_PRESENT_SHIFT	0
#define SVFPGA_SCLK_PRESENT_MASK	(1 << SVFPGA_SCLK_PRESENT_SHIFT)

#define SVFPGA_OSC_SWITCH_STATUS	(SVFPGA_PAGE_11 + 0x09)
#define SVFPGA_RSENSE_CTL3		(SVFPGA_PAGE_11 + 0x12)
#define SVFPGA_TSENSE_CTL		(SVFPGA_PAGE_11 + 0x13)
#define SVFPGA_TRSENSE_STATUS		(SVFPGA_PAGE_11 + 0x15)
#define SVFPGA_HSDET_CTL1		(SVFPGA_PAGE_11 + 0x1F)
#define SVFPGA_HSDET_CTL2		(SVFPGA_PAGE_11 + 0x20)
#define SVFPGA_HS_SWITCH_CTL		(SVFPGA_PAGE_11 + 0x21)
#define SVFPGA_HS_DET_STATUS		(SVFPGA_PAGE_11 + 0x24)
#define SVFPGA_HS_CLAMP_DISABLE	(SVFPGA_PAGE_11 + 0x29)

/* Page 0x12 Clocking Registers */
#define SVFPGA_MCLK_SRC_SEL		(SVFPGA_PAGE_12 + 0x01)
#define SVFPGA_MCLKDIV_SHIFT		1
#define SVFPGA_MCLKDIV_MASK		(1 << SVFPGA_MCLKDIV_SHIFT)
#define SVFPGA_MCLK_SRC_SEL_SHIFT	0
#define SVFPGA_MCLK_SRC_SEL_MASK	(1 << SVFPGA_MCLK_SRC_SEL_SHIFT)

#define SVFPGA_SPDIF_CLK_CFG		(SVFPGA_PAGE_12 + 0x02)

#define SVFPGA_FSYNC_PW_LOWER		(SVFPGA_PAGE_12 + 0x03)
#define SVFPGA_FSYNC_PW_UPPER		(SVFPGA_PAGE_12 + 0x04)
#define SVFPGA_FSYNC_PULSE_WIDTH_SHIFT	0
#define SVFPGA_FSYNC_PULSE_WIDTH_MASK	(0xff << SVFPGA_FSYNC_PULSE_WIDTH_SHIFT)

#define SVFPGA_FSYNC_P_LOWER		(SVFPGA_PAGE_12 + 0x05)
#define SVFPGA_FSYNC_P_UPPER		(SVFPGA_PAGE_12 + 0x06)
#define SVFPGA_FSYNC_PERIOD_SHIFT	0
#define SVFPGA_FSYNC_PERIOD_MASK	(0xff << SVFPGA_FSYNC_PERIOD_SHIFT)

#define SVFPGA_ASP_CLK_CFG		(SVFPGA_PAGE_12 + 0x07)
#define SVFPGA_ASP_SCLK_EN_SHIFT	5
#define SVFPGA_ASP_SCLK_EN_MASK	(1 << SVFPGA_ASP_SCLK_EN_SHIFT)
#define SVFPGA_ASP_MASTER_MODE		0x01
#define SVFPGA_ASP_SLAVE_MODE		0x00
#define SVFPGA_ASP_MODE_SHIFT		4
#define SVFPGA_ASP_MODE_MASK		(1 << SVFPGA_ASP_MODE_SHIFT)
#define SVFPGA_ASP_SCPOL_IN_DAC_SHIFT	2
#define SVFPGA_ASP_SCPOL_IN_DAC_MASK	(1 << SVFPGA_ASP_SCPOL_IN_DAC_SHIFT)
#define SVFPGA_ASP_LCPOL_IN_SHIFT	0
#define SVFPGA_ASP_LCPOL_IN_MASK	(1 << SVFPGA_ASP_LCPOL_IN_SHIFT)
#define SVFPGA_ASP_POL_INV		1

#define SVFPGA_ASP_FRM_CFG		(SVFPGA_PAGE_12 + 0x08)
#define SVFPGA_ASP_5050_SHIFT		3
#define SVFPGA_ASP_5050_MASK		(1 << SVFPGA_ASP_5050_SHIFT)
#define SVFPGA_ASP_FSD_SHIFT		0
#define SVFPGA_ASP_FSD_MASK		(7 << SVFPGA_ASP_FSD_SHIFT)
#define SVFPGA_ASP_FSD_1_0		2

#define SVFPGA_FS_RATE_EN		(SVFPGA_PAGE_12 + 0x09)
#define SVFPGA_FS_EN_SHIFT		0
#define SVFPGA_FS_EN_MASK		(0xf << SVFPGA_FS_EN_SHIFT)
#define SVFPGA_FS_EN_IASRC_96K		0x1
#define SVFPGA_FS_EN_OASRC_96K		0x2

#define SVFPGA_IN_ASRC_CLK		(SVFPGA_PAGE_12 + 0x0A)
#define SVFPGA_CLK_IASRC_SEL_SHIFT	0
#define SVFPGA_CLK_IASRC_SEL_MASK	(1 << SVFPGA_CLK_IASRC_SEL_SHIFT)
#define SVFPGA_CLK_IASRC_SEL_12	1

#define SVFPGA_OUT_ASRC_CLK		(SVFPGA_PAGE_12 + 0x0B)
#define SVFPGA_CLK_OASRC_SEL_SHIFT	0
#define SVFPGA_CLK_OASRC_SEL_MASK	(1 << SVFPGA_CLK_OASRC_SEL_SHIFT)
#define SVFPGA_CLK_OASRC_SEL_12	1

#define SVFPGA_PLL_DIV_CFG1		(SVFPGA_PAGE_12 + 0x0C)
#define SVFPGA_SCLK_PREDIV_SHIFT	0
#define SVFPGA_SCLK_PREDIV_MASK	(3 << SVFPGA_SCLK_PREDIV_SHIFT)

/* Page 0x13 Interrupt Registers */
/* Interrupts */
#define SVFPGA_ADC_OVFL_STATUS		(SVFPGA_PAGE_13 + 0x01)
#define SVFPGA_MIXER_STATUS		(SVFPGA_PAGE_13 + 0x02)
#define SVFPGA_SRC_STATUS		(SVFPGA_PAGE_13 + 0x03)
#define SVFPGA_ASP_RX_STATUS		(SVFPGA_PAGE_13 + 0x04)
#define SVFPGA_ASP_TX_STATUS		(SVFPGA_PAGE_13 + 0x05)
#define SVFPGA_CODEC_STATUS		(SVFPGA_PAGE_13 + 0x08)
#define SVFPGA_ALTDET_STATUS1		(SVFPGA_PAGE_13 + 0x09)
#define SVFPGA_ALTDET_STATUS2		(SVFPGA_PAGE_13 + 0x0A)
#define SVFPGA_DACADC_LSTATUS		(SVFPGA_PAGE_13 + 0x0B)
#define SVFPGA_VPMON_STATUS		(SVFPGA_PAGE_13 + 0x0D)
#define SVFPGA_PLL_LOCK		(SVFPGA_PAGE_13 + 0x0E)
#define SVFPGA_TSRS_PLUG_STATUS	(SVFPGA_PAGE_13 + 0x0F)
/* Masks */
#define SVFPGA_ADC_OVFL_MASK		(SVFPGA_PAGE_13 + 0x16)
#define SVFPGA_MIXER_MASK		(SVFPGA_PAGE_13 + 0x17)
#define SVFPGA_SRC_MASK		(SVFPGA_PAGE_13 + 0x18)
#define SVFPGA_ASP_RX_MASK		(SVFPGA_PAGE_13 + 0x19)
#define SVFPGA_ASP_TX_MASK		(SVFPGA_PAGE_13 + 0x1A)
#define SVFPGA_CODEC_MASK		(SVFPGA_PAGE_13 + 0x1B)
#define SVFPGA_DACADC_LMASK		(SVFPGA_PAGE_13 + 0x1C)
#define SVFPGA_VPMON_MASK		(SVFPGA_PAGE_13 + 0x1E)
#define SVFPGA_PLL_LOCK_MASK		(SVFPGA_PAGE_13 + 0x1F)
#define SVFPGA_TSRS_PLUG_MASK		(SVFPGA_PAGE_13 + 0x20)

/* Page 0x15 Fractional-N PLL Registers */
#define SVFPGA_PLL_CTL1		(SVFPGA_PAGE_15 + 0x01)
#define SVFPGA_PLL_START_SHIFT		0
#define SVFPGA_PLL_START_MASK		(1 << SVFPGA_PLL_START_SHIFT)

#define SVFPGA_PLL_DIV_FRAC0		(SVFPGA_PAGE_15 + 0x02)
#define SVFPGA_PLL_DIV_FRAC_SHIFT	0
#define SVFPGA_PLL_DIV_FRAC_MASK	(0xff << SVFPGA_PLL_DIV_FRAC_SHIFT)
#define SVFPGA_PLL_DIV_FRAC1		(SVFPGA_PAGE_15 + 0x03)
#define SVFPGA_PLL_DIV_FRAC2		(SVFPGA_PAGE_15 + 0x04)

#define SVFPGA_PLL_DIV_INT		(SVFPGA_PAGE_15 + 0x05)
#define SVFPGA_PLL_DIV_INT_SHIFT	0
#define SVFPGA_PLL_DIV_INT_MASK	(0xff << SVFPGA_PLL_DIV_INT_SHIFT)

#define SVFPGA_PLL_CTL3		(SVFPGA_PAGE_15 + 0x08)
#define SVFPGA_PLL_DIVOUT_SHIFT	0
#define SVFPGA_PLL_DIVOUT_MASK		(0xff << SVFPGA_PLL_DIVOUT_SHIFT)

#define SVFPGA_PLL_CAL_RATIO		(SVFPGA_PAGE_15 + 0x0A)
#define SVFPGA_PLL_CAL_RATIO_SHIFT	0
#define SVFPGA_PLL_CAL_RATIO_MASK	(0xff << SVFPGA_PLL_CAL_RATIO_SHIFT)

#define SVFPGA_PLL_CTL4		(SVFPGA_PAGE_15 + 0x1B)
#define SVFPGA_PLL_MODE_SHIFT		0
#define SVFPGA_PLL_MODE_MASK		(3 << SVFPGA_PLL_MODE_SHIFT)

/* Page 0x19 HP Load Detect Registers */
#define SVFPGA_LOAD_DET_RCSTAT		(SVFPGA_PAGE_19 + 0x25)
#define SVFPGA_RLA_STAT_SHIFT		0
#define SVFPGA_RLA_STAT_MASK		(3 << SVFPGA_RLA_STAT_SHIFT)
#define SVFPGA_RLA_STAT_15_OHM		0

#define SVFPGA_LOAD_DET_DONE		(SVFPGA_PAGE_19 + 0x26)
#define SVFPGA_LOAD_DET_EN		(SVFPGA_PAGE_19 + 0x27)

/* Page 0x1B Headset Interface Registers */
#define SVFPGA_HSBIAS_SC_AUTOCTL	(SVFPGA_PAGE_1B + 0x70)
#define SVFPGA_WAKE_CTL		(SVFPGA_PAGE_1B + 0x71)
#define SVFPGA_ADC_DISABLE_MUTE	(SVFPGA_PAGE_1B + 0x72)
#define SVFPGA_TIPSENSE_CTL		(SVFPGA_PAGE_1B + 0x73)
#define SVFPGA_MISC_DET_CTL		(SVFPGA_PAGE_1B + 0x74)
#define SVFPGA_MIC_DET_CTL1		(SVFPGA_PAGE_1B + 0x75)
#define SVFPGA_MIC_DET_CTL2		(SVFPGA_PAGE_1B + 0x76)
#define SVFPGA_DET_STATUS1		(SVFPGA_PAGE_1B + 0x77)
#define SVFPGA_DET_STATUS2		(SVFPGA_PAGE_1B + 0x78)
#define SVFPGA_DET_MASK1		(SVFPGA_PAGE_1B + 0x79)
#define SVFPGA_DET_MASK2		(SVFPGA_PAGE_1B + 0x7A)

/* Page 0x1C Headset Bias Registers */
#define SVFPGA_HS_BIAS_CTL		(SVFPGA_PAGE_1C + 0x03)

/* Page 0x1D ADC Registers */
#define SVFPGA_ADC_CTL			(SVFPGA_PAGE_1D + 0x01)
#define SVFPGA_ADC_NOTCH_DIS_SHIFT		5
#define SVFPGA_ADC_FORCE_WEAK_VCM_SHIFT	4
#define SVFPGA_ADC_INV_SHIFT			2
#define SVFPGA_ADC_DIG_BOOST_SHIFT		0

#define SVFPGA_ADC_VOLUME		(SVFPGA_PAGE_1D + 0x03)
#define SVFPGA_ADC_VOL_SHIFT		0

#define SVFPGA_ADC_WNF_HPF_CTL		(SVFPGA_PAGE_1D + 0x04)
#define SVFPGA_ADC_WNF_CF_SHIFT	4
#define SVFPGA_ADC_WNF_EN_SHIFT	3
#define SVFPGA_ADC_HPF_CF_SHIFT	1
#define SVFPGA_ADC_HPF_EN_SHIFT	0

/* Page 0x1F DAC Registers */
#define SVFPGA_DAC_CTL1		(SVFPGA_PAGE_1F + 0x01)
#define SVFPGA_DACB_INV_SHIFT		1
#define SVFPGA_DACA_INV_SHIFT		0

#define SVFPGA_DAC_CTL2		(SVFPGA_PAGE_1F + 0x06)
#define SVFPGA_HPOUT_LOAD_SHIFT	3
#define SVFPGA_HPOUT_LOAD_MASK		(1 << SVFPGA_HPOUT_LOAD_SHIFT)
#define SVFPGA_HPOUT_CLAMP_SHIFT	2
#define SVFPGA_HPOUT_CLAMP_MASK	(1 << SVFPGA_HPOUT_CLAMP_SHIFT)
#define SVFPGA_DAC_HPF_EN_SHIFT	1
#define SVFPGA_DAC_HPF_EN_MASK		(1 << SVFPGA_DAC_HPF_EN_SHIFT)

/* Page 0x20 HP CTL Registers */
#define SVFPGA_HP_CTL			(SVFPGA_PAGE_20 + 0x01)
#define SVFPGA_HP_ANA_BMUTE_SHIFT	3
#define SVFPGA_HP_ANA_BMUTE_MASK	(1 << SVFPGA_HP_ANA_BMUTE_SHIFT)
#define SVFPGA_HP_ANA_AMUTE_SHIFT	2
#define SVFPGA_HP_ANA_AMUTE_MASK	(1 << SVFPGA_HP_ANA_AMUTE_SHIFT)
#define SVFPGA_HP_FULL_SCALE_VOL_SHIFT	1
#define SVFPGA_HP_FULL_SCALE_VOL_MASK	(1 << SVFPGA_HP_FULL_SCALE_VOL_SHIFT)

/* Page 0x21 Class H Registers */
#define SVFPGA_CLASSH_CTL		(SVFPGA_PAGE_21 + 0x01)

/* Page 0x23 Mixer Volume Registers */
#define SVFPGA_MIXER_CHA_VOL		(SVFPGA_PAGE_23 + 0x01)
#define SVFPGA_MIXER_ADC_VOL		(SVFPGA_PAGE_23 + 0x02)
#define SVFPGA_MIXER_CHB_VOL		(SVFPGA_PAGE_23 + 0x03)
#define SVFPGA_MIXER_CH_VOL_SHIFT	0
#define SVFPGA_MIXER_CH_VOL_MASK	(0x3f << SVFPGA_MIXER_CH_VOL_SHIFT)

/* Page 0x24 EQ Registers */
#define SVFPGA_EQ_COEF_IN0		(SVFPGA_PAGE_24 + 0x01)
#define SVFPGA_EQ_COEF_IN1		(SVFPGA_PAGE_24 + 0x02)
#define SVFPGA_EQ_COEF_IN2		(SVFPGA_PAGE_24 + 0x03)
#define SVFPGA_EQ_COEF_IN3		(SVFPGA_PAGE_24 + 0x04)
#define SVFPGA_EQ_COEF_RW		(SVFPGA_PAGE_24 + 0x06)
#define SVFPGA_EQ_COEF_OUT0		(SVFPGA_PAGE_24 + 0x07)
#define SVFPGA_EQ_COEF_OUT1		(SVFPGA_PAGE_24 + 0x08)
#define SVFPGA_EQ_COEF_OUT2		(SVFPGA_PAGE_24 + 0x09)
#define SVFPGA_EQ_COEF_OUT3		(SVFPGA_PAGE_24 + 0x0A)
#define SVFPGA_EQ_INIT_STAT		(SVFPGA_PAGE_24 + 0x0B)
#define SVFPGA_EQ_START_FILT		(SVFPGA_PAGE_24 + 0x0C)
#define SVFPGA_EQ_MUTE_CTL		(SVFPGA_PAGE_24 + 0x0E)

/* Page 0x25 Audio Port Registers */
#define SVFPGA_SP_RX_CH_SEL		(SVFPGA_PAGE_25 + 0x01)
#define SVFPGA_SP_RX_ISOC_CTL		(SVFPGA_PAGE_25 + 0x02)
#define SVFPGA_SP_RX_FS		(SVFPGA_PAGE_25 + 0x03)
#define CS42l42_SPDIF_CH_SEL		(SVFPGA_PAGE_25 + 0x04)
#define SVFPGA_SP_TX_ISOC_CTL		(SVFPGA_PAGE_25 + 0x05)
#define SVFPGA_SP_TX_FS		(SVFPGA_PAGE_25 + 0x06)
#define SVFPGA_SPDIF_SW_CTL1		(SVFPGA_PAGE_25 + 0x07)

/* Page 0x26 SRC Registers */
#define SVFPGA_SRC_SDIN_FS		(SVFPGA_PAGE_26 + 0x01)
#define SVFPGA_SRC_SDOUT_FS		(SVFPGA_PAGE_26 + 0x09)

/* Page 0x28 S/PDIF Registers */
#define SVFPGA_SPDIF_CTL1		(SVFPGA_PAGE_28 + 0x01)
#define SVFPGA_SPDIF_CTL2		(SVFPGA_PAGE_28 + 0x02)
#define SVFPGA_SPDIF_CTL3		(SVFPGA_PAGE_28 + 0x03)
#define SVFPGA_SPDIF_CTL4		(SVFPGA_PAGE_28 + 0x04)

/* Page 0x29 Serial Port TX Registers */
#define SVFPGA_ASP_TX_SZ_EN		(SVFPGA_PAGE_29 + 0x01)
#define SVFPGA_ASP_TX_CH_EN		(SVFPGA_PAGE_29 + 0x02)
#define SVFPGA_ASP_TX_CH_AP_RES	(SVFPGA_PAGE_29 + 0x03)
#define SVFPGA_ASP_TX_CH1_BIT_MSB	(SVFPGA_PAGE_29 + 0x04)
#define SVFPGA_ASP_TX_CH1_BIT_LSB	(SVFPGA_PAGE_29 + 0x05)
#define SVFPGA_ASP_TX_HIZ_DLY_CFG	(SVFPGA_PAGE_29 + 0x06)
#define SVFPGA_ASP_TX_CH2_BIT_MSB	(SVFPGA_PAGE_29 + 0x0A)
#define SVFPGA_ASP_TX_CH2_BIT_LSB	(SVFPGA_PAGE_29 + 0x0B)

/* Page 0x2A Serial Port RX Registers */
#define SVFPGA_ASP_RX_DAI0_EN		(SVFPGA_PAGE_2A + 0x01)
#define SVFPGA_ASP_RX0_CH_EN_SHIFT	2
#define SVFPGA_ASP_RX0_CH_EN_MASK	(0xf << SVFPGA_ASP_RX0_CH_EN_SHIFT)
#define SVFPGA_ASP_RX0_CH1_EN		1
#define SVFPGA_ASP_RX0_CH2_EN		2
#define SVFPGA_ASP_RX0_CH3_EN		4
#define SVFPGA_ASP_RX0_CH4_EN		8

#define SVFPGA_ASP_RX_DAI0_CH1_AP_RES	(SVFPGA_PAGE_2A + 0x02)
#define SVFPGA_ASP_RX_DAI0_CH1_BIT_MSB	(SVFPGA_PAGE_2A + 0x03)
#define SVFPGA_ASP_RX_DAI0_CH1_BIT_LSB	(SVFPGA_PAGE_2A + 0x04)
#define SVFPGA_ASP_RX_DAI0_CH2_AP_RES	(SVFPGA_PAGE_2A + 0x05)
#define SVFPGA_ASP_RX_DAI0_CH2_BIT_MSB	(SVFPGA_PAGE_2A + 0x06)
#define SVFPGA_ASP_RX_DAI0_CH2_BIT_LSB	(SVFPGA_PAGE_2A + 0x07)
#define SVFPGA_ASP_RX_DAI0_CH3_AP_RES	(SVFPGA_PAGE_2A + 0x08)
#define SVFPGA_ASP_RX_DAI0_CH3_BIT_MSB	(SVFPGA_PAGE_2A + 0x09)
#define SVFPGA_ASP_RX_DAI0_CH3_BIT_LSB	(SVFPGA_PAGE_2A + 0x0A)
#define SVFPGA_ASP_RX_DAI0_CH4_AP_RES	(SVFPGA_PAGE_2A + 0x0B)
#define SVFPGA_ASP_RX_DAI0_CH4_BIT_MSB	(SVFPGA_PAGE_2A + 0x0C)
#define SVFPGA_ASP_RX_DAI0_CH4_BIT_LSB	(SVFPGA_PAGE_2A + 0x0D)
#define SVFPGA_ASP_RX_DAI1_CH1_AP_RES	(SVFPGA_PAGE_2A + 0x0E)
#define SVFPGA_ASP_RX_DAI1_CH1_BIT_MSB	(SVFPGA_PAGE_2A + 0x0F)
#define SVFPGA_ASP_RX_DAI1_CH1_BIT_LSB	(SVFPGA_PAGE_2A + 0x10)
#define SVFPGA_ASP_RX_DAI1_CH2_AP_RES	(SVFPGA_PAGE_2A + 0x11)
#define SVFPGA_ASP_RX_DAI1_CH2_BIT_MSB	(SVFPGA_PAGE_2A + 0x12)
#define SVFPGA_ASP_RX_DAI1_CH2_BIT_LSB	(SVFPGA_PAGE_2A + 0x13)

#define SVFPGA_ASP_RX_CH_AP_SHIFT	6
#define SVFPGA_ASP_RX_CH_AP_MASK	(1 << SVFPGA_ASP_RX_CH_AP_SHIFT)
#define SVFPGA_ASP_RX_CH_AP_LOW	0
#define SVFPGA_ASP_RX_CH_AP_HI		1
#define SVFPGA_ASP_RX_CH_RES_SHIFT	0
#define SVFPGA_ASP_RX_CH_RES_MASK	(3 << SVFPGA_ASP_RX_CH_RES_SHIFT)
#define SVFPGA_ASP_RX_CH_RES_32	3
#define SVFPGA_ASP_RX_CH_BIT_ST_SHIFT	0
#define SVFPGA_ASP_RX_CH_BIT_ST_MASK	(0xff << SVFPGA_ASP_RX_CH_BIT_ST_SHIFT)

/* Page 0x30 ID Registers */
#define SVFPGA_SUB_REVID		(SVFPGA_PAGE_30 + 0x14)
#define SVFPGA_MAX_REGISTER		(SVFPGA_PAGE_30 + 0x14)

#define SVFPGA_SUPPORTED_RATE	48000

/* Defines for fracturing values spread across multiple registers */
#define SVFPGA_FRAC0_VAL(val)	((val) & 0x0000ff)
#define SVFPGA_FRAC1_VAL(val)	(((val) & 0x00ff00) >> 8)
#define SVFPGA_FRAC2_VAL(val)	(((val) & 0xff0000) >> 16)

#define SVFPGA_NUM_SUPPLIES 5
static const char *const svfpga_supply_names[SVFPGA_NUM_SUPPLIES] = {
	"VA",
	"VP",
	"VCP",
	"VD_FILT",
	"VL",
};

struct  svfpga_private {
	struct regmap *regmap;
	struct snd_soc_codec *codec;
	struct regulator_bulk_data supplies[SVFPGA_NUM_SUPPLIES];
	struct gpio_desc *reset_gpio;
	u32 sclk;
	u8 hpout_load;
	u8 hpout_clamp;
	struct sdw_slave *sdw;
};

int svfpga_probe(struct device *dev, struct regmap *regmap,
					struct sdw_slave *slave);
int svfpga_remove(struct device *dev);
#endif /* __SVFPGA_H__ */
